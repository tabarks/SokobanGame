@startuml
class GridThings.CrateBox {
- boolean marked
+ <<Create>> CrateBox(int,int,boolean)
+ boolean isMarked()
+ void setMarked(boolean)
}
class MainPackage.PictureComponent {
- BufferedImage image
+ <<Create>> PictureComponent(File)
+ void paintComponent(Graphics)
+ void changeImage(File)
}
abstract class GridThings.GridThing {
- int i
- int j
+ <<Create>> GridThing(int,int)
+ int getI()
+ int getJ()
+ void setPos(int,int)
+ void goRight()
+ void goLeft()
+ void goUP()
+ void goDown()
+ {static} GridThing listChecker(ArrayList<? extends GridThing>,int,int)
}
class Levels.SecondLevelModel {
+ <<Create>> SecondLevelModel()
}
class Levels.ThirdLevelModel {
+ <<Create>> ThirdLevelModel()
}
interface MainPackage.Strategy {
~ int moveType()
}
class MainPackage.PrintObserver {
- GameModel model
+ <<Create>> PrintObserver(GameModel)
+ void stateChanged()
+ void setModel(GameModel)
}
class GridThings.Player {
+ <<Create>> Player()
+ <<Create>> Player(int,int)
}
class Levels.FirstLevelModel {
+ <<Create>> FirstLevelModel()
}
interface MainPackage.Observer {
~ void stateChanged()
~ void setModel(GameModel)
}
class GridThings.BlankMarkedBox {
+ <<Create>> BlankMarkedBox(int,int)
}
class MainPackage.GameRunner {
- GameModel gameModel
- int levelNumber
- ArrayList<Observer> observers
- ArrayList<Class<? extends GameModel>> levelsClasses
+ <<Create>> GameRunner(GameModel)
+ void addObserver(Observer)
+ void stateChanged()
+ void setModel(GameModel)
- void newGameModel()
+ void changeModel(GameModel)
+ void startFileStrategyStart()
+ void stopFileStrategyStart()
+ {static} void main(String[])
}
class GridThings.Wall {
+ <<Create>> Wall(int,int)
}
class MainPackage.FileStrategy {
- Scanner reader
+ <<Create>> FileStrategy(File)
+ int moveType()
}
class MainPackage.GraphicalFrame {
- GameModel model
- int lastPressed
- Dimension dimension
- PictureComponent[][] components
- {static} File BLANK_FILE
- {static} File BLANK_MARKED_FILE
- {static} File CRATE_FILE
- {static} File CRATE_MARKED_FILE
- {static} File PLAYER_FILE
- {static} File WALL_FILE
+ <<Create>> GraphicalFrame(GameModel)
+ void stateChanged()
+ void setModel(GameModel)
+ {static} void loader()
+ int moveType()
}
class MainPackage.SoundObserver {
- GameModel gameModel
+ <<Create>> SoundObserver(GameModel)
+ void play(String)
+ void stateChanged()
+ void setModel(GameModel)
}
class MainPackage.GameLoader{
+ <<Create>> GameLoader(String)
}
class MainPackage.GameSaver{
+ {static} void save(GameModel, String)
}
abstract class MainPackage.GameModel {
- Dimension d
- ArrayList<CrateBox> crateBoxes
- ArrayList<BlankMarkedBox> blankMarkedBoxes
- ArrayList<Wall> walls
- Player player
- ArrayList<Observer> observers
+ {static} int DO_NOTHING
+ {static} int GO_RIGHT
+ {static} int GO_LEFT
+ {static} int GO_UP
+ {static} int GO_DOWN
+ <<Create>> GameModel(int,int)
+ boolean checkWin()
+ boolean checkLose()
+ void addObserver(Observer)
+ Dimension getD()
+ void setD(Dimension)
+ ArrayList<CrateBox> getCrateBoxes()
+ ArrayList<BlankMarkedBox> getBlankMarkedBoxes()
+ ArrayList<Wall> getWalls()
+ void addWall(int,int)
+ void setPlayerPos(int,int)
+ Player getPlayer()
# void updateThings()
+ void addCrateBox(int,int)
+ void addMarkedBox(int,int)
+ void accept(Strategy)
- void goRight()
- void goLeft()
- void goUP()
- void goDown()
}
MainPackage.GraphicalFrame *-- MainPackage.GameRunner
MainPackage.GraphicalFrame --> MainPackage.GameSaver
MainPackage.GraphicalFrame --> MainPackage.GameLoader
MainPackage.GameModel <|-r- Levels.FirstLevelModel
MainPackage.GameModel <|-- Levels.SecondLevelModel
MainPackage.GameModel <|-- Levels.ThirdLevelModel

MainPackage.JComponent <|-l- MainPackage.PictureComponent

MainPackage.Observer <|.. MainPackage.PrintObserver
GridThings.GridThing <|-- GridThings.CrateBox
GridThings.GridThing <|-- GridThings.Player
GridThings.GridThing <|-- GridThings.BlankMarkedBox
GridThings.GridThing <|-- GridThings.Wall



MainPackage.Observer <|.. MainPackage.GameRunner
MainPackage.Strategy <|.. MainPackage.FileStrategy
MainPackage.Observer <|.. MainPackage.GraphicalFrame
MainPackage.Strategy <|.. MainPackage.GraphicalFrame
MainPackage.JFrame <|-- MainPackage.GraphicalFrame
MainPackage.Observer <|.. MainPackage.SoundObserver

MainPackage.GameModel "1" *-- "1" GridThings.Player
MainPackage.GameModel "1" *-- "0..*" GridThings.Wall
MainPackage.GameModel "1" *-- "0..*" GridThings.CrateBox
MainPackage.GameModel "1" *-- "0..*" GridThings.BlankMarkedBox


MainPackage.SoundObserver  *-- MainPackage.GameModel
MainPackage.GraphicalFrame *-- MainPackage.GameModel
MainPackage.PrintObserver *-- MainPackage.GameModel
MainPackage.GameRunner *-- MainPackage.GameModel
MainPackage.GraphicalFrame *-- MainPackage.PictureComponent

'MainPackage.GameRunner .u.> Levels.FirstLevelModel
'MainPackage.GameRunner .u.> Levels.SecondLevelModel
MainPackage.GameModel "1" *-- "0..*" MainPackage.Observer
@enduml